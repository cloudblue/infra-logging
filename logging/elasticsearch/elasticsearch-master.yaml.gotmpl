replicas: {{ .Values.logging.output_to_es.replicas }}
minimumMasterNodes: {{ add ( div .Values.logging.output_to_es.replicas 2 )  1 }}

  # Permit co-located instances for solitary minikube virtual machines.
antiAffinity: "soft"

{{- if hasKey .Values.logging.output_to_es "dedicate_node_pool" }}
{{- if .Values.logging.output_to_es.dedicate_node_pool }}
nodeSelector:
  purpose: infrastructure
  
tolerations:
  - key: taint
    value: infrastructure
    effect: NoSchedule
{{else}}
nodeSelector:
  efk: "true"
{{end}}
{{else}}
nodeSelector:
  efk: "true"
{{end}}

# Shrink default JVM heap.
esJavaOpts: "-XX:MaxRAMPercentage=25 -XX:MinRAMPercentage=50"

roles:
  master: "true"
  ingest: "true"
  data: "true"
  ml: "false"
  remote_cluster_client: "false"

# Allocate smaller chunks of memory per pod.
resources:
  requests:
    cpu: "{{ .Values.logging.output_to_es | get "cpu" "4" }}"
    memory: "{{ .Values.logging.output_to_es | get "mem" "10Gi" }}"
  limits:
    cpu: "{{ .Values.logging.output_to_es | get "cpu" "4" }}"
    memory: "{{ .Values.logging.output_to_es | get "mem" "10Gi" }}"

# Request smaller persistent volumes.
volumeClaimTemplate:
  accessModes: [ "ReadWriteOnce" ]
  storageClassName: {{ .Values.logging.output_to_es | get "storage_class" "static-vols" }}
  resources:
    requests:
      storage: {{ .Values.logging.output_to_es | get "storage_size" "10Gi" }} 
      
persistence:
  enabled: true
  labels:
    app: elasticsearch-master
    purpose: infrastructure

{{- if hasKey .Values.logging.output_to_es "secure" }}
{{- if .Values.logging.output_to_es.secure }}
protocol: https

esConfig:
  elasticsearch.yml: |
    xpack.security.enabled: true
    xpack.security.transport.ssl.enabled: true
    xpack.security.transport.ssl.verification_mode: certificate
    xpack.security.transport.ssl.keystore.path: /usr/share/elasticsearch/config/certs/elastic-certificates.p12
    xpack.security.transport.ssl.truststore.path: /usr/share/elasticsearch/config/certs/elastic-certificates.p12
    xpack.security.http.ssl.enabled: true
    xpack.security.http.ssl.truststore.path: /usr/share/elasticsearch/config/certs/elastic-certificates.p12
    xpack.security.http.ssl.keystore.path: /usr/share/elasticsearch/config/certs/elastic-certificates.p12
    xpack.security.audit.enabled: true

extraEnvs:
  - name: ELASTIC_PASSWORD
    valueFrom:
      secretKeyRef:
        name: elastic-credentials
        key: password
  - name: ELASTIC_USERNAME
    valueFrom:
      secretKeyRef:
        name: elastic-credentials
        key: username

secretMounts:
  - name: elastic-certificates
    secretName: elastic-certificates
    path: /usr/share/elasticsearch/config/certs

{{else}}
protocol: http
{{end}}
{{end}}