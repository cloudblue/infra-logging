# Default values for fluent-bit.

# kind -- DaemonSet or Deployment
kind: DaemonSet

# replicaCount -- Only applicable if kind=Deployment
replicaCount: 1

image:
  repository: fluent/fluent-bit
  pullPolicy: Always
  tag: 1.8.6

testFramework:
  image:
    repository: busybox
    pullPolicy: Always
    tag: latest

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  annotations: {}
  name:

rbac:
  create: true

podSecurityPolicy:
  create: false
  annotations: {}

podSecurityContext:
  {}
  # fsGroup: 2000
dnsConfig: {}
  # nameservers:
  #   - 1.2.3.4
  # searches:
  #   - ns1.svc.cluster-domain.example
  #   - my.dns.search.suffix
  # options:
  #   - name: ndots
#     value: "2"
#   - name: edns0

hostAliases: []
  # - ip: "1.2.3.4"
  #   hostnames:
  #   - "foo.local"
  #   - "bar.local"

securityContext:
  {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 2020
  labels:
    {}
  annotations:
    prometheus.io/path: "/api/v1/metrics/prometheus"
    prometheus.io/port: "2020"
    prometheus.io/scrape: "true"

serviceMonitor:
  enabled: true
  namespace: ""
  interval: 5s
  scrapeTimeout: 5s
  selector:
    release: prometheus-operator

prometheusRule:
  enabled: true
  namespace: ""
  additionnalLabels: {}
  rules:
  
  - alert: LoggingFluenbitdDown
    expr: up{job="fluentbit-fluent-bit"} == 0
    for: 5m
    labels:
      context: fluentbit
      severity: warning
    annotations:
      summary: "Fluentbit Down"
      description: "{{` {{ $labels.pod }} `}} on {{` {{ $labels.nodename }} `}} is down.
      
      Do a kubectl -n infrastructure get pods and see if there is any issue in terms of resources."
  
  - alert: LoggingFluentbitScrapeMissing
    expr: absent(up{job="fluentbit-fluent-bit"} == 1)
    for: 15m
    labels:
      context: fluentbit
      severity: warning
    annotations:
      summary: "Fluentbit Scrape Missing"
      description: "Fluentbit instance has disappeared from Prometheus target discovery.

      Do a kubectl -n infrastructure get pods and see if there is any issue in terms of resources."
  
  - alert: LoggingFluentbitNoOutputBytesProcessed
    expr: rate(fluentbit_output_proc_bytes_total{job="fluentbit-fluent-bit"}[5m]) == 0
    for: 15m
    labels:
      context: fluentbit
      severity: critical
    annotations:
      summary: No Output Bytes Processed
      description: "Fluent Bit instance {{` {{ $labels.instance }} `}}'s output plugin {{` {{ $labels.name }} `}} has not processed any bytes for at least 15 minutes.
      
      Do a kubectl -n infrastructure get pods and see if there is any issue with pods."
      

dashboards:
  enabled: false
  labelKey: grafana_dashboard
  annotations: {}

livenessProbe:
  httpGet:
    path: /
    port: http

readinessProbe:
  httpGet:
    path: /
    port: http

resources:
    limits:
        cpu: "1"
        memory: 2G
    requests:
        cpu: 100m
        memory: 512Mi

nodeSelector: {}

tolerations:
  - key: node-role.kubernetes.io/master
    operator: Exists
    effect: NoSchedule
  - key: CriticalAddonsOnly
    operator: Exists
  - operator: Exists
    effect: NoExecute
  - operator: Exists
    effect: NoSchedule
  - operator: Exists
    effect: PreferNoSchedule
  - key: node.kubernetes.io/not-ready
    operator: Exists
    effect: NoExecute
  - key: node.kubernetes.io/unreachable
    operator: Exists
    effect: NoExecute
  - key: node.kubernetes.io/disk-pressure
    operator: Exists
    effect: NoSchedule
  - key: node.kubernetes.io/memory-pressure
    operator: Exists
    effect: NoSchedule
  - key: node.kubernetes.io/pid-pressure
    operator: Exists
    effect: NoSchedule
  - key: node.kubernetes.io/unschedulable
    operator: Exists
    effect: NoSchedule

affinity: {}

podAnnotations: 
  prometheus.io/scrape: "true"
  prometheus.io/port: "2020"

podLabels: {}

priorityClassName: ""

env:
{{ if hasKey .Values.logging "output_to_es" }}
{{ if .Values.logging.output_to_es }}
{{ if hasKey .Values.logging.output_to_es "enabled" }}
{{ if .Values.logging.output_to_es.enabled }}
{{ if hasKey .Values.logging.output_to_es "index_strategy" }}
{{ if .Values.logging.output_to_es.index_strategy }}
- name: INDEX_STRATEGY
  value: "{{ .Values.logging.output_to_es.index_strategy }}"
{{ end }}
{{ end }}
{{ end }}
{{ end }}
{{ end }}
{{ end }}

envFrom: []

extraContainers: []
  # - name: do-something
  #   image: busybox
  #   command: ['do', 'something']

#extraPorts: 
#   - port: 80
#     containerPort: 80
#     protocol: TCP
#     name: tcp

extraVolumes: []

extraVolumeMounts: []

updateStrategy: {}
  # type: RollingUpdate
  # rollingUpdate:
  #   maxUnavailable: 1

# Make use of a pre-defined configmap instead of the one templated here
existingConfigMap: ""

networkPolicy:
  enabled: false
  # ingress:
  #   from: []

luaScripts: 
  script.lua: |
{{ readFile "./config/fluentbit/script.lua" | trim | indent 5 }}

## https://docs.fluentbit.io/manual/administration/configuring-fluent-bit/configuration-file
config:
  service: |
{{ tpl (readFile "./config/fluentbit/service.conf.tpl") . | trim | indent 5 }}

  ## https://docs.fluentbit.io/manual/pipeline/inputs
  inputs: |
{{ tpl (readFile "./config/fluentbit/input.conf.tpl") . | trim | indent 5 }} 

  ## https://docs.fluentbit.io/manual/pipeline/filters
  filters: |
{{- if hasKey .Values.logging "output_to_es" }}
{{- if .Values.logging.output_to_es }}
{{- if hasKey .Values.logging.output_to_es "enabled" }}
{{- if .Values.logging.output_to_es.enabled }}
{{- if hasKey .Values.logging.output_to_es "index_strategy" }}
{{- if .Values.logging.output_to_es.index_strategy }}
{{ readFile "./config/fluentbit/filter_index_strategy.conf" | trim | indent 5 }}
{{ end }}
{{ end }}
{{ end }}
{{ end }}
{{ end }}
{{ end }}

{{ readFile "./config/fluentbit/filter.conf" | trim | indent 5 }}

  ## https://docs.fluentbit.io/manual/pipeline/outputs
  outputs: |
{{ readFile "./config/fluentbit/output_forward.conf" | trim | indent 5 }}      

  ## https://docs.fluentbit.io/manual/pipeline/parsers
  customParsers: |

# The config volume is mounted by default, either to the existingConfigMap value, or the default of "fluent-bit.fullname"
volumeMounts:
  - name: config
    mountPath: /fluent-bit/etc/fluent-bit.conf
    subPath: fluent-bit.conf
  - name: config
    mountPath: /fluent-bit/etc/custom_parsers.conf
    subPath: custom_parsers.conf

daemonSetVolumes:
  - name: mnt
    hostPath:
      path: /mnt
  - name: varlog
    hostPath:
      path: /var/log
  - name: varlibdockercontainers
    hostPath:
      path: /var/lib/docker/containers
  - name: etcmachineid
    hostPath:
      path: /etc/machine-id
      type: File

daemonSetVolumeMounts:
  - name: mnt
    mountPath: /mnt
  - name: varlog
    mountPath: /var/log
  - name: varlibdockercontainers
    mountPath: /var/lib/docker/containers
    readOnly: true
  - name: etcmachineid
    mountPath: /etc/machine-id
    readOnly: true

args: []

command: []

initContainers: []
  # - name: do-something
  #   image: busybox
  #   command: ['do', 'something']