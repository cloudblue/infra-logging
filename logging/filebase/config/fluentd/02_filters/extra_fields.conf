#### Extra fields
#<filter **>
#  @type parser
#  key_name log
#  reserve_data true
#  <parse>
#    @type regexp
#    expression /^(?<time>.+) (?<stream>stdout|stderr)( (.))? (?<message>.*)$/
#    time_format '%Y-%m-%dT%H:%M:%S.%NZ'
#    keep_time_key true
#  </parse>
#</filter>

#<filter **>
#  @type parser
#  key_name time
#  reserve_data true
#  <parse>
#    @type regexp
#    expression /^(?<log_year>.+)-(?<log_month>.+)-(?<log_day>.+)T((.))?$/
#  </parse>
# </filter>

<filter **>
  @type record_transformer
  enable_ruby true
  <record>
  
    namespace ${ record.dig('kubernetes', 'namespace_name') != nil ? record["kubernetes"]["namespace_name"] : record.dig('kubernetes', 'namespace') != nil ? record["kubernetes"]["namespace"] : "k8s" }

    podname ${ ( record.dig('kubernetes', 'pod_name') != nil && record['kubernetes']['pod_name'].include?('bss-worker') ) ? 'bss-worker' : record.dig('kubernetes', 'pod_name') != nil ? record["kubernetes"]["pod_name"] : record.dig('kubernetes', 'pod','name') != nil ? record['kubernetes']['pod']['name'] :  "unknown" }
    
    containername ${ record.dig('kubernetes', 'container_name') != nil ? record["kubernetes"]["container_name"] : record.dig('kubernetes', 'container','name') != nil ? record["kubernetes"]["container"]["name"] : "unknown" }
    
    message ${ record["message"] ? record["message"] : record["msg"] ? record["msg"] : record["log"] ? record["log"] : '' }

  </record>
  
  remove_keys log

</filter>

